class Solution {

private:
    int finddays(vector<int>& weights, int cap) {
        int day=1;
        int load=0;
        for(int i=0;i<weights.size();i++){
            if(weights[i]+load>cap){
                day+=1;
                load=weights[i];
            }
            else{
                load+=weights[i];
            }
        }
        return day;
    }

public:
    int shipWithinDays(vector<int>& weights, int days) {
        int low=*max_element(weights.begin(),weights.end());
        int high=accumulate(weights.begin(),weights.end(),0);
        while(low<=high){
            int mid=(low+high)/2;
            int no_of_days=finddays(weights,mid);
            if(no_of_days<=days){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
};
